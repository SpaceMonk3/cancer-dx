version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cancerdx
      POSTGRES_USER: cancerdx_user
      POSTGRES_PASSWORD: cancerdx_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cancerdx_user -d cancerdx"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cancerdx-network

  # FastAPI Application
  api:
    build: .
    environment:
      DATABASE_URL: postgresql://cancerdx_user:cancerdx_password@postgres:5432/cancerdx
      SECRET_KEY: your-super-secret-key-change-in-production-minimum-32-characters
      ALLOWED_ORIGINS: http://localhost:3000,https://your-frontend-domain.com
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploads
      - ./start.sh:/app/start.sh
    command: ["/bin/bash", "/app/start.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cancerdx-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cancerdx-network

volumes:
  postgres_data:
  redis_data:

networks:
  cancerdx-network:
    driver: bridge